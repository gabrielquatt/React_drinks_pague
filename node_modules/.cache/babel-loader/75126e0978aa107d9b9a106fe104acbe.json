{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../styles/NewForm.css\";\nimport Error from \"./500\";\nimport Loading from \"../components/Loading\";\nimport DrinksNew from \"./DrinkNew\";\nimport url from '../config';\n\nconst DrinkNewContainer = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n};\n\n_s(DrinkNewContainer, \"3j3Al4NmEKVwc2A13CdrBstMIj0=\");\n\n_c = DrinkNewContainer;\nexport default DrinkNewContainer;\n/* class DrinkNewContainer extends React.Component {\n  \n  state = {\n    form: {\n      title: \"\",\n      description: \"\",\n      logo: \"\",\n    },\n    loading: false,\n    error: null,\n  };\n\n  handleChange = (e) => {\n    //evento de captura los cambio en los inputs\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  handleSubmit = async (e) => {\n    this.setState({\n      loading: true\n    });\n\n    e.preventDefault();\n\n    try {\n      let config = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.form),\n      };\n\n      let res = await fetch(url+\"/api/drink\", config);\n      let json = await res.json();\n\n      this.setState({\n        loading: false\n      });\n      this.props.history.push(\"../home\");\n\n    } catch (error) {\n      console.log(\"en catch\");\n      this.setState({\n        loading: false,\n        error,\n      });\n    }\n\n    console.log(this.state);\n  };\n\n  render() {\n  \n    if (this.state.loading) {\n      return <Loading />;\n    }\n    if (this.state.error) {\n      return <Error />;\n    }\n    return <DrinksNew\n    form={this.state.form}\n    onChange={this.handleChange}\n    onSubmit={this.handleSubmit}\n    />\n  }\n}\n\nexport default DrinkNewContainer;\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinkNewContainer\");","map":{"version":3,"sources":["/home/gabriel/Escritorio/TUDAI/React/drinks_pague/src/pages/DrinkNewContainer.js"],"names":["React","useState","Error","Loading","DrinksNew","url","DrinkNewContainer","data","setData","loading","setLoading","error","setError"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,GAAP,MAAgB,WAAhB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEQ,OAAF,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAAEU,KAAF,EAASC,QAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AAGD,CAND;;GAAMK,iB;;KAAAA,iB;AAOJ,eAAeA,iBAAf;AAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from \"react\";\n\nimport \"../styles/NewForm.css\";\nimport Error from \"./500\";\nimport Loading from \"../components/Loading\";\nimport DrinksNew from \"./DrinkNew\";\n\nimport url from '../config';\n\nconst DrinkNewContainer = () => {\n  const [ data, setData ] = useState([])\n  const [ loading, setLoading] = useState(true)\n  const [ error, setError ] = useState(null)\n\n  \n}\n  export default DrinkNewContainer;\n\n\n\n\n/* class DrinkNewContainer extends React.Component {\n  \n  state = {\n    form: {\n      title: \"\",\n      description: \"\",\n      logo: \"\",\n    },\n    loading: false,\n    error: null,\n  };\n\n  handleChange = (e) => {\n    //evento de captura los cambio en los inputs\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  handleSubmit = async (e) => {\n    this.setState({\n      loading: true\n    });\n\n    e.preventDefault();\n\n    try {\n      let config = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(this.state.form),\n      };\n\n      let res = await fetch(url+\"/api/drink\", config);\n      let json = await res.json();\n\n      this.setState({\n        loading: false\n      });\n      this.props.history.push(\"../home\");\n\n    } catch (error) {\n      console.log(\"en catch\");\n      this.setState({\n        loading: false,\n        error,\n      });\n    }\n\n    console.log(this.state);\n  };\n\n  render() {\n  \n    if (this.state.loading) {\n      return <Loading />;\n    }\n    if (this.state.error) {\n      return <Error />;\n    }\n    return <DrinksNew\n    form={this.state.form}\n    onChange={this.handleChange}\n    onSubmit={this.handleSubmit}\n    />\n  }\n}\n\nexport default DrinkNewContainer;\n */"]},"metadata":{},"sourceType":"module"}